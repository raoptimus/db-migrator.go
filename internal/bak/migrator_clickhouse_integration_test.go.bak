/**
 * This file is part of the raoptimus/db-migrator.go library
 *
 * @copyright Copyright (c) Evgeniy Urvantsev <resmus@gmail.com>
 * @license https://github.com/raoptimus/db-migrator.go/blob/master/LICENSE.md
 * @link https://github.com/raoptimus/db-migrator.go
 */

package bak

import (
	"database/sql"
	"os"
	"testing"

	"github.com/sirupsen/logrus"
	"github.com/stretchr/testify/assert"
)

func TestMigrateService_ClickHouse_UpDown(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping integration test")
	}
	m, err := createClickhouseMigrator()
	assert.NoError(t, err)

	_, err = m.db.Exec("DROP DATABASE docker")
	assert.NoError(t, err)
	_, err = m.db.Exec("CREATE DATABASE docker")
	assert.NoError(t, err)

	err = m.Up("2")
	assert.NoError(t, err)

	assertEqualMigrationsCount(t, m.db, 2+1)
}

func createClickhouseMigrator() (*Service, error) {
	return New(&Options{
		DSN:         os.Getenv("CLICKHOUSE_DSN"),
		Directory:   os.Getenv("CLICKHOUSE_MIGRATIONS_PATH"),
		TableName:   "migration",
		Compact:     false,
		Interactive: false,
	}, logrus.StandardLogger())
}

func assertEqualMigrationsCount(t *testing.T, db *sql.DB, expected int) {
	var count int
	err := db.QueryRow("SELECT count(*) FROM docker.migration").Scan(&count)
	assert.NoError(t, err)
	assert.Equal(t, expected, count)
}

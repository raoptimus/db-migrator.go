// Code generated by mockery. DO NOT EDIT.

package mockmockservice

import mock "github.com/stretchr/testify/mock"

// mockConstructorTestingTNewRepository is an autogenerated mock type for the mockConstructorTestingTNewRepository type
type mockConstructorTestingTNewRepository struct {
	mock.Mock
}

type mockConstructorTestingTNewRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *mockConstructorTestingTNewRepository) EXPECT() *mockConstructorTestingTNewRepository_Expecter {
	return &mockConstructorTestingTNewRepository_Expecter{mock: &_m.Mock}
}

// Cleanup provides a mock function with given fields: _a0
func (_m *mockConstructorTestingTNewRepository) Cleanup(_a0 func()) {
	_m.Called(_a0)
}

// mockConstructorTestingTNewRepository_Cleanup_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Cleanup'
type mockConstructorTestingTNewRepository_Cleanup_Call struct {
	*mock.Call
}

// Cleanup is a helper method to define mock.On call
//   - _a0 func()
func (_e *mockConstructorTestingTNewRepository_Expecter) Cleanup(_a0 interface{}) *mockConstructorTestingTNewRepository_Cleanup_Call {
	return &mockConstructorTestingTNewRepository_Cleanup_Call{Call: _e.mock.On("Cleanup", _a0)}
}

func (_c *mockConstructorTestingTNewRepository_Cleanup_Call) Run(run func(_a0 func())) *mockConstructorTestingTNewRepository_Cleanup_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(func()))
	})
	return _c
}

func (_c *mockConstructorTestingTNewRepository_Cleanup_Call) Return() *mockConstructorTestingTNewRepository_Cleanup_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockConstructorTestingTNewRepository_Cleanup_Call) RunAndReturn(run func(func())) *mockConstructorTestingTNewRepository_Cleanup_Call {
	_c.Run(run)
	return _c
}

// Errorf provides a mock function with given fields: format, args
func (_m *mockConstructorTestingTNewRepository) Errorf(format string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, format)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// mockConstructorTestingTNewRepository_Errorf_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Errorf'
type mockConstructorTestingTNewRepository_Errorf_Call struct {
	*mock.Call
}

// Errorf is a helper method to define mock.On call
//   - format string
//   - args ...interface{}
func (_e *mockConstructorTestingTNewRepository_Expecter) Errorf(format interface{}, args ...interface{}) *mockConstructorTestingTNewRepository_Errorf_Call {
	return &mockConstructorTestingTNewRepository_Errorf_Call{Call: _e.mock.On("Errorf",
		append([]interface{}{format}, args...)...)}
}

func (_c *mockConstructorTestingTNewRepository_Errorf_Call) Run(run func(format string, args ...interface{})) *mockConstructorTestingTNewRepository_Errorf_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]interface{}, len(args)-1)
		for i, a := range args[1:] {
			if a != nil {
				variadicArgs[i] = a.(interface{})
			}
		}
		run(args[0].(string), variadicArgs...)
	})
	return _c
}

func (_c *mockConstructorTestingTNewRepository_Errorf_Call) Return() *mockConstructorTestingTNewRepository_Errorf_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockConstructorTestingTNewRepository_Errorf_Call) RunAndReturn(run func(string, ...interface{})) *mockConstructorTestingTNewRepository_Errorf_Call {
	_c.Run(run)
	return _c
}

// FailNow provides a mock function with no fields
func (_m *mockConstructorTestingTNewRepository) FailNow() {
	_m.Called()
}

// mockConstructorTestingTNewRepository_FailNow_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FailNow'
type mockConstructorTestingTNewRepository_FailNow_Call struct {
	*mock.Call
}

// FailNow is a helper method to define mock.On call
func (_e *mockConstructorTestingTNewRepository_Expecter) FailNow() *mockConstructorTestingTNewRepository_FailNow_Call {
	return &mockConstructorTestingTNewRepository_FailNow_Call{Call: _e.mock.On("FailNow")}
}

func (_c *mockConstructorTestingTNewRepository_FailNow_Call) Run(run func()) *mockConstructorTestingTNewRepository_FailNow_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockConstructorTestingTNewRepository_FailNow_Call) Return() *mockConstructorTestingTNewRepository_FailNow_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockConstructorTestingTNewRepository_FailNow_Call) RunAndReturn(run func()) *mockConstructorTestingTNewRepository_FailNow_Call {
	_c.Run(run)
	return _c
}

// Logf provides a mock function with given fields: format, args
func (_m *mockConstructorTestingTNewRepository) Logf(format string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, format)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// mockConstructorTestingTNewRepository_Logf_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Logf'
type mockConstructorTestingTNewRepository_Logf_Call struct {
	*mock.Call
}

// Logf is a helper method to define mock.On call
//   - format string
//   - args ...interface{}
func (_e *mockConstructorTestingTNewRepository_Expecter) Logf(format interface{}, args ...interface{}) *mockConstructorTestingTNewRepository_Logf_Call {
	return &mockConstructorTestingTNewRepository_Logf_Call{Call: _e.mock.On("Logf",
		append([]interface{}{format}, args...)...)}
}

func (_c *mockConstructorTestingTNewRepository_Logf_Call) Run(run func(format string, args ...interface{})) *mockConstructorTestingTNewRepository_Logf_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]interface{}, len(args)-1)
		for i, a := range args[1:] {
			if a != nil {
				variadicArgs[i] = a.(interface{})
			}
		}
		run(args[0].(string), variadicArgs...)
	})
	return _c
}

func (_c *mockConstructorTestingTNewRepository_Logf_Call) Return() *mockConstructorTestingTNewRepository_Logf_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockConstructorTestingTNewRepository_Logf_Call) RunAndReturn(run func(string, ...interface{})) *mockConstructorTestingTNewRepository_Logf_Call {
	_c.Run(run)
	return _c
}

// newMockConstructorTestingTNewRepository creates a new instance of mockConstructorTestingTNewRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockConstructorTestingTNewRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockConstructorTestingTNewRepository {
	mock := &mockConstructorTestingTNewRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
